cmake_minimum_required(VERSION 2.8)
project(negine)

include(cmake/internal_utils.cmake)

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")

set(SRC_PATH ${negine_SOURCE_DIR}/src)
set(TOOLS_PATH ${negine_SOURCE_DIR}/thirdparty)
set(TESTS_PATH ${SRC_PATH}/tests)

option(USE_SDL "SDL" ON)
option(USE_GLUT "Freeglut" OFF)

if (USE_SDL AND USE_GLUT)
  message(FATAL_ERROR "use only one sdl or glut option")
endif()
if (NOT USE_SDL AND NOT USE_GLUT)
  message(FATAL_ERROR "use one engine: sdl or glut")
endif()

if(UNIX OR MINGW)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Werror -Wno-invalid-offsetof -std=gnu++11 -fno-exceptions -fno-rtti")
  add_definitions(-D_DEBUG)
endif()
if(APPLE)
    set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++11")
    set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++") 
    set(CMAKE_EXE_LINKER_FLAGS "-framework Cocoa -framework OpenGL")
endif()
if(WIN32 AND MSVC)
  set(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /WX /GR-")
  add_definitions(-D_HAS_EXCEPTIONS=0)
  add_definitions(-D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE)
endif()
set(CMAKE_DEBUG_POSTFIX "_d")

if(USE_SDL)
    add_definitions(-DSDL_ENGINE)
elseif(USE_GLUT)
    add_definitions(-DGLUT_ENGINE)
endif()

if(WIN32 AND MSVC)
    if (MSVC_VERSION EQUAL 1600)
        link_directories(${TOOLS_PATH}/libs-win-vs2010)
    endif()
    if (MSVC_VERSION EQUAL 1700)
        link_directories(${TOOLS_PATH}/libs-win-vs2012)
    endif()
elseif(MINGW)
    link_directories(${TOOLS_PATH}/libs-win-vs2010)
elseif(APPLE)
elseif(UNIX)
    link_directories(${TOOLS_PATH}/libs-linux)
endif()



#add_subdirectory(${TOOLS_PATH}/lua ${PROJECT_BINARY_DIR}/lua)

add_subdirectory(${SRC_PATH} ${PROJECT_BINARY_DIR}/negine)
add_subdirectory(${SRC_PATH}/app ${PROJECT_BINARY_DIR}/app)
add_subdirectory(${TESTS_PATH} ${PROJECT_BINARY_DIR}/tests)
add_subdirectory(${SRC_PATH}/demos ${PROJECT_BINARY_DIR}/demos)
